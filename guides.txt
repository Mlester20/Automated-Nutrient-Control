import { ScrollView, Text, TouchableOpacity, View, Image } from 'react-native';
import { SafeAreaView } from "react-native-safe-area-context";
import { ingredients } from '@/constants';
import Swiper from 'react-native-swiper';
import { useRef, useState } from 'react';

const Guide = () => {
    const swiperRef = useRef<Swiper>(null);
    const [activeIndex, setActiveIndex] = useState(0);

    return (
        <SafeAreaView className="flex h-full items-center justify-between bg-green-50">
            <Text className='flex items-center font-JakartaBold text-lg mt-10'>Ingredients</Text>
            <Swiper
                ref={swiperRef}
                loop={false}
                dot={
                    <View className="w-[16px] h-[6px] mx-1 bg-gray-400 rounded-full" />
                }
                activeDot={
                    <View className="w-[16px] h-[6px] mx-1 bg-blue-500 rounded-full" />
                }
                onIndexChanged={(index) => setActiveIndex(index)} // Updates active index
            >
                {ingredients.map((item) => (
                    <View key={item.id} className="flex items-center justify-center px-5 py-8">
                        <Image
                            source={item.image}
                            className="w-[280px] h-[220px] rounded-lg shadow-lg"
                            resizeMode="contain"
                        />
                        <View className="flex flex-row items-center justify-center w-full mt-6">
                            <Text className="text-black text-sm font-bold mx-2 text-center">
                                {item.title}
                            </Text>
                        </View>
                    </View>
                ))}
            </Swiper>

            {/* Footer with current slide info */}
            <View className="p-4">
                <Text className="text-sm text-gray-600">
                    Slide {activeIndex + 1} of {ingredients.length}
                </Text>
            </View>
        </SafeAreaView>
    );
};

export default Guide;


import { Tabs } from "expo-router";
import { Image, ImageSourcePropType, View } from "react-native";

import { icons } from "@/constants";

const TabIcon = ({
  source,
  focused,
}: {
  source: ImageSourcePropType;
  focused: boolean;
}) => (
  <View
    className={`flex flex-row justify-center items-center rounded-full ${focused ? "bg-general-300" : ""}`}
  >
    <View
      className={`rounded-full w-12 h-12 items-center justify-center ${focused ? "bg-general-400" : ""}`}
    >
      <Image
        source={source}
        tintColor="white"
        resizeMode="contain"
        className="w-7 h-7"
      />
    </View>
  </View>
);

export default function Layout() {
  return (
    <Tabs
      initialRouteName="index"
      screenOptions={{
        tabBarActiveTintColor: "white",
        tabBarInactiveTintColor: "white",
        tabBarShowLabel: false,
        tabBarStyle: {
          backgroundColor: "#333333",
          borderRadius: 50,
          paddingBottom: 0,
          overflow: "hidden",
          marginHorizontal: 20,
          marginBottom: 20,
          height: 78,
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center",
          flexDirection: "row",
          position: "absolute",
        },
      }}
    >
      <Tabs.Screen
        name="home"
        options={{
          title: "Home",
          headerShown: false,
          tabBarIcon: ({ focused }) => (
            <TabIcon source={icons.home} focused={focused} />
          ),
        }}
      />
      <Tabs.Screen
        name="calculate"
        options={{
          title: "Calculate",
          headerShown: false,
          tabBarIcon: ({ focused }) => (
            <TabIcon source={icons.calculate} focused={focused} />
          ),
        }}
      />
      <Tabs.Screen
        name="guide"
        options={{
          title: "Guide",
          headerShown: false,
          tabBarIcon: ({ focused }) => (
            <TabIcon source={icons.books} focused={focused} />
          ),
        }}
      />
      <Tabs.Screen
        name="history"
        options={{
          title: "History",
          headerShown: false,
          tabBarIcon: ({ focused }) => (
            <TabIcon source={icons.history} focused={focused} />
          ),
        }}
      />
      <Tabs.Screen
        name="reference"
        options={{
          title: "Reference",
          headerShown: false,
          tabBarIcon: ({ focused }) => (
            <TabIcon source={icons.profile} focused={focused} />
          ),
        }}
      />
    </Tabs>
  );
}
