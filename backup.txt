import React, { useEffect, useState } from 'react';
import { Text, View, Picker } from 'react-native';
import { SafeAreaView } from "react-native-safe-area-context";
import { SQLiteProvider, useSQLiteContext } from 'expo-sqlite';
import Footer from '@/components/Footer';

// Function to initialize the database (create tables and seed default values)
async function initializeDatabase(db: any) {
  try {
    console.log("Initializing database...");

    // Create the `liveStock` table
    await db.execAsync(`
      PRAGMA journal_mode = WAL;
      CREATE TABLE IF NOT EXISTS liveStock (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL
      );
    `);

    // Create the `stage` table
    await db.execAsync(`
      CREATE TABLE IF NOT EXISTS stage (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        targetProtein TEXT NOT NULL,
        feedIntakeRange TEXT NOT NULL,
        morningFeed TEXT NOT NULL,
        afternoonFeed TEXT NOT NULL,
        eveningFeed TEXT NOT NULL,
        waterIntake TEXT NOT NULL
      );
    `);

    // Seed default values for `liveStock`
    const liveStockResult = await db.getAllAsync("SELECT * FROM liveStock;");
    if (liveStockResult.length === 0) {
      const liveStockValues = ["Pig", "Chicken", "Duck", "Fish"];
      for (const name of liveStockValues) {
        await db.runAsync("INSERT INTO liveStock (name) VALUES (?);", [name]);
      }
      console.log("Default livestock values seeded successfully!");
    }

    // Seed default values for `stage`
    const stageResult = await db.getAllAsync("SELECT * FROM stage;");
    if (stageResult.length === 0) {
      const stageValues = [
        {
          name: "Starter",
          targetProtein: "18-20%",
          feedIntakeRange: "50-55 kg/day",
          morningFeed: "20-22 kg",
          afternoonFeed: "15-16.5 kg",
          eveningFeed: "15-16.5 kg",
          waterIntake: "10L/day",
        },
        {
          name: "Finisher",
          targetProtein: "13-14%",
          feedIntakeRange: "55-60 kg/day",
          morningFeed: "22-24 kg",
          afternoonFeed: "16.5-18 kg",
          eveningFeed: "16.5-18 kg",
          waterIntake: "12L/day",
        },
        {
          name: "Grower",
          targetProtein: "18-19%",
          feedIntakeRange: "55-58 kg/day",
          morningFeed: "22-23 kg",
          afternoonFeed: "16.5-17.5 kg",
          eveningFeed: "16.5-17.5 kg",
          waterIntake: "11L/day",
        },
      ];
      for (const stage of stageValues) {
        await db.runAsync(
          "INSERT INTO stage (name, targetProtein, feedIntakeRange, morningFeed, afternoonFeed, eveningFeed, waterIntake) VALUES (?, ?, ?, ?, ?, ?, ?);",
          [
            stage.name,
            stage.targetProtein,
            stage.feedIntakeRange,
            stage.morningFeed,
            stage.afternoonFeed,
            stage.eveningFeed,
            stage.waterIntake,
          ]
        );
      }
      console.log("Default stage values seeded successfully!");
    }
  } catch (error) {
    console.error("Error initializing database:", error);
  }
}

const Calculate = () => {
  const db = useSQLiteContext(); // SQLite database context
  const [liveStockList, setLiveStockList] = useState<string[]>([]);
  const [selectedLiveStock, setSelectedLiveStock] = useState("");
  const [stageList, setStageList] = useState<string[]>([]);
  const [selectedStage, setSelectedStage] = useState("");

  // Fetch data for `liveStock` and `stage` when component mounts
  useEffect(() => {
    const fetchData = async () => {
      try {
        const liveStockResult = await db.getAllAsync("SELECT * FROM liveStock;");
        const liveStockNames = liveStockResult.map((row: any) => row.name);
        setLiveStockList(liveStockNames);

        const stageResult = await db.getAllAsync("SELECT * FROM stage;");
        const stageNames = stageResult.map((row: any) => row.name);
        setStageList(stageNames);
      } catch (error) {
        console.error("Error fetching data:", error);
      }
    };

    fetchData();
  }, [db]);

  return (
    <SafeAreaView className="flex-1 bg-green-50">
      {/* Title Section */}
      <View className="bg-green-600 p-4 rounded-b-3xl shadow-lg">
        <Text className="text-2xl font-JakartaBold text-white text-center">Calculate</Text>
      </View>

      {/* Dropdowns for Selecting Livestock and Stage */}
      <View className="p-4">
        {/* Livestock Dropdown */}
        <Text className="text-lg font-semibold mb-2">Select Livestock:</Text>
        <Picker
          selectedValue={selectedLiveStock}
          onValueChange={(itemValue) => setSelectedLiveStock(itemValue)}
          style={{ backgroundColor: "#fff", borderRadius: 8 }}
        >
          {liveStockList.map((item, index) => (
            <Picker.Item label={item} value={item} key={index} />
          ))}
        </Picker>

        {/* Stage Dropdown */}
        <Text className="text-lg font-semibold mt-4 mb-2">Select Stage:</Text>
        <Picker
          selectedValue={selectedStage}
          onValueChange={(itemValue) => setSelectedStage(itemValue)}
          style={{ backgroundColor: "#fff", borderRadius: 8 }}
        >
          {stageList.map((item, index) => (
            <Picker.Item label={item} value={item} key={index} />
          ))}
        </Picker>
      </View>

      {/* Footer */}
      <Footer />
    </SafeAreaView>
  );
};

// Main App Component wrapped with SQLiteProvider
export default function App() {
  return (
    <SQLiteProvider databaseName="organicDb.db" onInit={initializeDatabase}>
      <Calculate />
    </SQLiteProvider>
  );
}
